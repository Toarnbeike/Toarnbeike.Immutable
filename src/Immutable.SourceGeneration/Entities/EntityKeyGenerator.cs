using Toarnbeike.Immutable.SourceGeneration.TypeInformation;

namespace Toarnbeike.Immutable.SourceGeneration.Entities;

/// <summary>
/// Generates a partial implementation of an EntityKey,
/// that provides a static New method and interface implementation.
/// </summary>
internal static class EntityKeyGenerator
{
    public static string Execute(EntityKeyInfo key)
    {
        return $$"""
                    // <auto-generated />
                    // generator: Toarnbeike.Immutable.SourceGeneration.Entities.EntityKeyGenerator
                    #nullable enable

                    using System;
                    using Toarnbeike.Immutable.Entities;

                    namespace {{key.Namespace}};

                    public readonly partial record struct {{key.Name}}(Guid Value) : IEntityKey<{{key.Name}}>
                    {
                        /// <inheritdoc />
                        public static {{key.Name}} New() => new(Guid.CreateVersion7());
                        
                        /// <inheritdoc />
                        public static {{key.Name}} Empty => new(Guid.Empty);
                    }
                    """;
    }
    
    public static string FileName(EntityKeyInfo key) =>
        $"{key.Namespace}.{key.Name}.g.cs";
}